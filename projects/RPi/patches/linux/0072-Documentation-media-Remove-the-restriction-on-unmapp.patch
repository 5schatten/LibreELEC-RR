From 15478c3185334d25f5c168b42b6889572ef27736 Mon Sep 17 00:00:00 2001
From: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date: Tue, 15 May 2018 09:47:54 +0100
Subject: [PATCH 72/80] Documentation: media: Remove the restriction on
 unmapping buffers

Update documentation to remove the requirement for all
buffers to be unmapped before REQBUFS(0) tries releasing
when in MMAP mode.
The buffers are all refcounted correctly anyway, so there
is no need for vb2 to enforce that they are freed.

Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
---
 Documentation/media/uapi/v4l/mmap.rst           | 4 +++-
 Documentation/media/uapi/v4l/vidioc-reqbufs.rst | 9 ++++++---
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/Documentation/media/uapi/v4l/mmap.rst b/Documentation/media/uapi/v4l/mmap.rst
index 670596c1a4f7..e3d8afe3a3e1 100644
--- a/Documentation/media/uapi/v4l/mmap.rst
+++ b/Documentation/media/uapi/v4l/mmap.rst
@@ -32,7 +32,9 @@ To allocate device buffers applications call the
 :ref:`VIDIOC_REQBUFS` ioctl with the desired number
 of buffers and buffer type, for example ``V4L2_BUF_TYPE_VIDEO_CAPTURE``.
 This ioctl can also be used to change the number of buffers or to free
-the allocated memory, provided none of the buffers are still mapped.
+the allocated memory. The buffers will not be released until the buffers
+are unmapped and any exported dma_buf handles are closed, and this is the
+responsibility of the application.
 
 Before applications can access the buffers they must map them into their
 address space with the :ref:`mmap() <func-mmap>` function. The
diff --git a/Documentation/media/uapi/v4l/vidioc-reqbufs.rst b/Documentation/media/uapi/v4l/vidioc-reqbufs.rst
index 316f52c8a310..31a48f73a53d 100644
--- a/Documentation/media/uapi/v4l/vidioc-reqbufs.rst
+++ b/Documentation/media/uapi/v4l/vidioc-reqbufs.rst
@@ -59,9 +59,12 @@ When the I/O method is not supported the ioctl returns an ``EINVAL`` error
 code.
 
 Applications can call :ref:`VIDIOC_REQBUFS` again to change the number of
-buffers, however this cannot succeed when any buffers are still mapped.
-A ``count`` value of zero frees all buffers, after aborting or finishing
-any DMA in progress, an implicit
+buffers. This may be called with buffers still mapped or having been exported
+via :ref:`VIDIOC_EXPBUF`, however those mappings will point at old buffers
+and not the reallocated ones. It is the responsibility of the application
+to unmap all buffers when finished with.
+A ``count`` value of zero releases the driver's references to all buffers,
+after aborting or finishing any DMA in progress, an implicit
 :ref:`VIDIOC_STREAMOFF <VIDIOC_STREAMON>`.
 
 
-- 
2.17.0

