From 1141dca0749ac33e651c0013db8011994258ebb0 Mon Sep 17 00:00:00 2001
From: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date: Thu, 3 May 2018 15:25:53 +0100
Subject: [PATCH 68/80] bcm2835-camera: Release the dma_buf in stop_streaming.

REQBUFS(0) requires that all mmap and dmabuf users have
released their references before it will complete, but
performs this check before it gives the driver a chance
to release any references it may hold.

Release the dma_buf in stop_streaming.

Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
---
 .../bcm2835-camera/bcm2835-camera.c           | 25 +++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/vc04_services/bcm2835-camera/bcm2835-camera.c b/drivers/staging/vc04_services/bcm2835-camera/bcm2835-camera.c
index a827e3584374..6de40cd8ed10 100644
--- a/drivers/staging/vc04_services/bcm2835-camera/bcm2835-camera.c
+++ b/drivers/staging/vc04_services/bcm2835-camera/bcm2835-camera.c
@@ -350,8 +350,10 @@ static void buffer_cleanup(struct vb2_buffer *vb)
 	mmal_vchi_buffer_cleanup(&buf->mmal);
 
 #if defined(CONFIG_BCM_VC_SM_CMA)
-	if (buf->mmal.dma_buf)
+	if (buf->mmal.dma_buf) {
 		dma_buf_put(buf->mmal.dma_buf);
+		buf->mmal.dma_buf = NULL;
+	}
 #endif
 }
 
@@ -649,8 +651,11 @@ static int start_streaming(struct vb2_queue *vq, unsigned int count)
 /* abort streaming and wait for last buffer */
 static void stop_streaming(struct vb2_queue *vq)
 {
-	int ret;
 	struct bm2835_mmal_dev *dev = vb2_get_drv_priv(vq);
+	struct vb2_v4l2_buffer *vb2;
+	struct vb2_mmal_buffer *buf;
+	int ret;
+	int i;
 
 	v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev, "%s: dev:%p\n",
 		 __func__, dev);
@@ -680,6 +685,22 @@ static void stop_streaming(struct vb2_queue *vq)
 		v4l2_err(&dev->v4l2_dev,
 			 "error %d waiting for frame completion\n", ret);
 
+	/*
+	 * Release the VCSM handle here as otherwise REQBUFS(0) aborts because
+	 * someone is using the dmabuf before giving the driver a chance to do
+	 * anything about it.
+	 */
+	for (i = 0; i < vq->num_buffers; i++) {
+		vb2 = to_vb2_v4l2_buffer(vq->bufs[i]);
+		buf = container_of(vb2, struct vb2_mmal_buffer, vb);
+
+		mmal_vchi_buffer_cleanup(&buf->mmal);
+		if (buf->mmal.dma_buf) {
+			dma_buf_put(buf->mmal.dma_buf);
+			buf->mmal.dma_buf = NULL;
+		}
+	}
+
 	v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
 		 "disabling connection\n");
 
-- 
2.17.0

